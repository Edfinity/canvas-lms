development:
  address: "smtp.example.com"
  port: "25"
  user_name: "user"
  password: "password"
  authentication: "plain" # plain, login, or cram_md5
  domain: "example.com"
  outgoing_address: "canvas@example.com"
  default_name: "Instructure Canvas"

# or to use sendmail --
#
# development:
#   delivery_method: "sendmail"

test:
  delivery_method: "test"

production:
    ENV.fetch('SMTP_PORT', 25)
    ENV.fetch('SMTP_ADDRESS', 'smtp.example.com')
    ENV.fetch('SMTP_ENABLE_STARTTLS_AUTO', true)
    ENV.fetch('SMTP_USER_NAME', 'user')
    ENV.fetch('SMTP_PASSWORD', 'password')
    ENV.fetch('SMTP_AUTHENTICATION', 'plain')
    ENV.fetch('SMTP_DOMAIN', 'example.com')
    ENV.fetch('SMTP_OUTGOING_ADDRESS', 'canvas@example.com')
    ENV.fetch('SMTP_DEFAULT_NAME', 'Instructure Canvas')

# If receiving mail from multiple inboxes (see incoming_mail.yml.example),
# you'll want to include those addresses in a reply_to_addresses array so
# Canvas will select the Reply-To field of outgoing messages from all of the
# incoming mailboxes.

multiple_inboxes:
  address: "smtp.example.com"
  port: "25"
  user_name: "user"
  password: "password"
  authentication: "plain" # plain, login, or cram_md5
  domain: "example.com"
  outgoing_address: "canvas@example.com"
  default_name: "Instructure Canvas"
  reply_to_addresses:
  - "canvas1@example.com"
  - "canvas2@example.com"
  - "canvas3@example.com"
  - "canvas4@example.com"
